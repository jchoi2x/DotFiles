
public class funfun{
  public int[] visited;
  public void funfun(int w) {
    int j;     //w = 0;

    visited[w] = 1;
    if (w == 0) {
      System.out.print(w + " ");
    }

    for (j = 0; j <= 6; j++) {
      if ((adjMatrix[w][j] == 1) && (visited[j] == 0)) {
        System.out.print(j + " ");

        depthFirstRecursive(j);
      }
    }
  }

  public void breadthFirst(int first, int p) {
    int e;     // first = 0; p = 6
    int[] nodeVisited = new int[7];
    que.add(first);


    while (!que.isEmpty()) {
      e = que.remove();
      if(nodeVisited[e]==0){
        System.out.print(e);
        nodeVisited[e]=1;
      }
      for (int i = 0; i <= p; i++){

        if((adjMatrix[e][i] == 1) && (nodeVisited[i] == 0)){
          que.add(e);
          nodeVisited[i]=1;
          System.out.print(" " + i);
          e = i;
        }
      }

    }
  }


  public static void main(String[] args) {



    // 1  2  3  4  5  6  7
    int[][] adjMatrix = { {0, 1, 1, 0, 0, 0, 0},
      {1, 0, 0, 1, 1, 1, 0},
      {1, 0, 0, 0, 0, 0, 1},
      {0, 1, 0, 0, 0, 0, 1},
      {0, 1, 0, 0, 0, 0, 1},
      {0, 1, 0, 0, 0, 0 ,0},
      {0, 0, 1, 1, 1, 0, 0}  };


    new funfun(adjMatrix);
  }
}
